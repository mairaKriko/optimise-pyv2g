#######################################################
# 
# SECCImplementationFactory.py
# Python implementation of the Class SECCImplementationFactory
# Generated by Enterprise Architect
# Created on:      07-Jan-2021 11:53:16
# Original author: Fabian.Stichtenoth
# 
#######################################################
from secc.evseController.IACEVSEController import IACEVSEController
from secc.session.V2GCommunicationSessionSECC import V2GCommunicationSessionSECC
from secc.backend.IBackendInterface import IBackendInterface
from secc.evseController.IDCEVSEController import IDCEVSEController
from secc.backend.DummyBackendInterface import DummyBackendInterface
from secc.evseController.DummyACEVSEController import DummyACEVSEController
from secc.evseController.DummyDCEVSEController import DummyDCEVSEController
from shared.misc.V2GImplementationFactory import V2GImplementationFactory


class SECCImplementationFactory(V2GImplementationFactory):
    """Implementation factory for the SECC controllers and for the backend interface
    """

    def __init__(self):
        super().__init__()

    def create_ac_evse_controller(self, comm_session_context: V2GCommunicationSessionSECC) -> IACEVSEController:
        """Creates the AC EVSE controller for the SECC application
        :param comm_session_context: V2GCommunicationSessionSECC
        :return: IACEVSEController
        """
        instance = self.build_from_properties("implementation.secc.acevsecontroller", IACEVSEController.__class__)

        if instance is None:
            instance = DummyACEVSEController(comm_session_context)

        instance.set_comm_session_context(comm_session_context)
        return instance

    def create_backend_interface(self, comm_session_context: V2GCommunicationSessionSECC) -> IBackendInterface:
        """Creates the backend interface for the SECC application
        :param comm_session_context: V2GCommunicationSessionSECC
        :return: IBackendInterface
        """
        instance = self.build_from_properties("implementation.secc.backend", IBackendInterface.__class__)

        if instance is None:
            instance = DummyBackendInterface(comm_session_context)

        instance.set_comm_session_context(comm_session_context)
        return instance

    def create_dc_evse_controller(self, comm_session_context: V2GCommunicationSessionSECC) -> IDCEVSEController:
        """Creates the DC EVSE controller for the SECC application
        :param comm_session_context: V2GCommunicationSessionSECC
        :return: IDCEVSEController
        """
        instance = self.build_from_properties("implementation.secc.dcevsecontroller", IDCEVSEController.__class__)

        if instance is None:
            instance = DummyDCEVSEController(comm_session_context)

        instance.set_comm_session_context(comm_session_context)
        return instance
