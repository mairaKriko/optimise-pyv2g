#######################################################
# 
# IEVSEController.py
# Python implementation of the Interface IEVSEController
# Generated by Enterprise Architect
# Created on:      07-Jan-2021 11:51:23
# Original author: Fabian.Stichtenoth
# 
#######################################################
from shared.v2gMessages.msgDef.MeterInfoType import MeterInfoType
from secc.session.V2GCommunicationSessionSECC import V2GCommunicationSessionSECC


class IEVSEController:

    @staticmethod
    def close_contactor() -> bool:
        """Closes the contactor if CP state C was measured (which is a prerequisite for
        power transfer) upon receipt of PowerDeliveryReq with ChargeProgress set to
        START. A timeout of 3s is allowed.
        :return: bool that is True, if contactor is closed, False otherwise
        """
        pass

    @staticmethod
    def get_evse_id():
        """The EVSEID is formatted according to Annex H of ISO/IEC 15118 and consists of
        minimum 7, max 37 characters.
        :return: ID given as a string that uniquely identifies the EVSE and the power
        outlet the vehicle is connected to
        """
        pass

    @staticmethod
    def get_meter_info() -> MeterInfoType:
        """Returns the MeterInfo record containing the latest meter reading and other
        meter relevant data.
        :return: MeterInfoType; Meter reading and other meter data contained in MeterInfoType
        """
        pass

    @staticmethod
    def open_contactor() -> bool:
        """Opens the contactor if CP state B was measured upon receipt of PowerDeliveryReq
        with ChargeProgress set to STOP. A timeout of 3s is allowed.
        :return: bool that is True, if contactor is opened, False otherwise
        """
        pass

    def set_comm_session_context(self, comm_session_context: V2GCommunicationSessionSECC):
        """Provides a reference to the current communication session for this controller
        instance.
        :param comm_session_context: V2GCommunicationSessionSECC
        :return: None
        """
        pass
